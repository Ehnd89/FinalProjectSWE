{"ast":null,"code":"var _jsxFileName = \"/Users/amynye/FinalProjectSWE/src/comps/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [showIntro, setShowIntro] = useState(true);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    const userMessage = input;\n\n    // Append the user's message to the conversation\n    const updatedMessages = [...messages, {\n      text: userMessage,\n      sender: 'user'\n    }];\n    setMessages(updatedMessages);\n    setInput('');\n    setShowIntro(false);\n\n    // Send the entire conversation history to OpenAI\n    await handleAIResponse(updatedMessages);\n  };\n  const handleAIResponse = async conversation => {\n    try {\n      const payload = {\n        model: 'gpt-3.5-turbo',\n        messages: conversation.map(msg => ({\n          role: msg.sender === 'user' ? 'user' : 'assistant',\n          content: msg.text\n        }))\n      };\n      console.log('OpenAI Request Payload:', payload);\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer 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'\n        },\n        body: JSON.stringify(payload)\n      });\n      console.log('OpenAI Response:', response);\n      if (!response.ok) {\n        throw new Error('Failed to fetch AI response');\n      }\n      const data = await response.json();\n      const aiResponse = data.choices[0].message.content;\n      setMessages(prevMessages => [...prevMessages, {\n        text: aiResponse,\n        sender: 'advisor'\n      }]);\n    } catch (error) {\n      console.error('Error fetching AI response:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatContainer\",\n    children: [showIntro && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"IntroSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://upload.wikimedia.org/wikipedia/en/b/b4/Howard_Bison_logo.svg\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"How can I help you today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `Message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: input,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"9h/xTrEBL1fMSnxVrtoC3eI9z98=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","_s","input","setInput","messages","setMessages","showIntro","setShowIntro","handleInputChange","e","target","value","handleSendMessage","userMessage","updatedMessages","text","sender","handleAIResponse","conversation","payload","model","map","msg","role","content","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","aiResponse","choices","message","prevMessages","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","index","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/amynye/FinalProjectSWE/src/comps/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './chat.css';\n\nfunction Chat() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [showIntro, setShowIntro] = useState(true);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSendMessage = async () => {\n    const userMessage = input;\n  \n    // Append the user's message to the conversation\n    const updatedMessages = [...messages, { text: userMessage, sender: 'user' }];\n    setMessages(updatedMessages);\n    setInput('');\n    setShowIntro(false);\n  \n    // Send the entire conversation history to OpenAI\n    await handleAIResponse(updatedMessages);\n  };\n  \n  const handleAIResponse = async (conversation) => {\n    try {\n      const payload = {\n        model: 'gpt-3.5-turbo',\n        messages: conversation.map((msg) => ({ role: msg.sender === 'user' ? 'user' : 'assistant', content: msg.text })),\n      };\n  \n      console.log('OpenAI Request Payload:', payload);\n  \n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer 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',\n        },\n        body: JSON.stringify(payload),\n      });\n  \n      console.log('OpenAI Response:', response);\n  \n      if (!response.ok) {\n        throw new Error('Failed to fetch AI response');\n      }\n  \n      const data = await response.json();\n      const aiResponse = data.choices[0].message.content;\n  \n      setMessages((prevMessages) => [...prevMessages, { text: aiResponse, sender: 'advisor' }]);\n    } catch (error) {\n      console.error('Error fetching AI response:', error.message);\n    }\n  };\n\n  return (\n    <div className=\"ChatContainer\">\n      {showIntro && (\n        <div className=\"IntroSection\">\n          <img src=\"https://upload.wikimedia.org/wikipedia/en/b/b4/Howard_Bison_logo.svg\" alt=\"Logo\" />\n          <p>How can I help you today?</p>\n        </div>\n      )}\n      <div className=\"ChatBox\">\n        <div className=\"Messages\">\n          {messages.map((message, index) => (\n            <div key={index} className={`Message ${message.sender}`}>\n              {message.text}\n            </div>\n          ))}\n        </div>\n        <div className=\"InputBox\">\n          <input\n            type=\"text\"\n            placeholder=\"Type a message...\"\n            value={input}\n            onChange={handleInputChange}\n          />\n          <button onClick={handleSendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}